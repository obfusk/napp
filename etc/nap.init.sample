#!/bin/sh
### BEGIN INIT INFO
# Provides:           nap
# Required-Start:     $remote_fs $syslog
# Required-Stop:      $remote_fs $syslog
# Default-Start:      2 3 4 5
# Default-Stop:       0 1 6
# Short-Description:  nap initscript
# Description:        Starts nap apps.
### END INIT INFO

# --                                                            # {{{1
#
# File        : nap.init.sample
# Maintainer  : Felix C. Stegerman <flx@obfusk.net>
# Date        : 2012-10-29
#
# Copyright   : Copyright (C) 2012  Felix C. Stegerman
# Licence     : GPLv2
#
# --
#
# === Installing ===
#
#   $ cp -i nap.init.sample /etc/init.d/nap
#   $ chmod +x /etc/init.d/nap
#   $ update-rc.d nap defaults
#
# --                                                            # }}}1

# Do NOT "set -e"
# PATH should only include /usr/* if it runs after the mountnfs.sh
# script

PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC='nap apps'
SCRIPT=/etc/init.d/$NAME
run='sudo -H -u nap bash -l -c'

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

# --

do_start    () { $run 'naps pstart'   ; }
do_stop     () { $run 'naps stop'     ; }
do_restart  () { $run 'naps restart'  ; }
do_status   () { $run 'naps'          ; }

# --

case "$1" in
  start)
    [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
    do_start
    case "$?" in
      0) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
      *) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
    esac
  ;;
  stop)
    [ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
    do_stop
    case "$?" in
      0) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
      *) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
    esac
  ;;
  status)
    do_status
  ;;
  restart|force-reload)
    log_daemon_msg "Restarting $DESC" "$NAME"
    do_restart
    case "$?" in
      0) log_end_msg 0 ;;
      *) log_end_msg 1 ;;
    esac
  ;;
  *)
    echo "Usage: $SCRIPT {start|stop|status|restart|force-reload}" >&2
    exit 3
  ;;
esac

:

# --
